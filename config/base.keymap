#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define FN 3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <250>;
};

/ {
    behaviors {
        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <30>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
            layers = <0>;
        };

        combo_grave {
            timeout-ms = <30>;
            key-positions = <6 7>;
            bindings = <&kp GRAVE>;
            layers = <0>;
        };

        combo_q {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&kp Q>;
            layers = <0>;
        };

        combo_j {
            timeout-ms = <30>;
            key-positions = <1 3>;
            bindings = <&kp J>;
            layers = <0>;
        };

        combo_z {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp Z>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                              &kp C      &kp M       &kp P      &kp V            &kp SEMI   &dot_excl  &kp FSLH    &kp BSLH
            &kp X &mt LSHFT R &mt RALT S &mt LCTRL T &mt LGUI H &kp K            &kp COMMA  &mt RGUI N &mt RCTRL E &mt RALT A &mt RSHFT I &kp SQT
                  &kp W       &kp G      &lt FN D    &lt SYM F  &kp B            &kp MINUS  &lt SYM L  &lt FN U    &kp O      &kp Y
                                                     &kp ENTER  &lt NAV SPC      &skq RSHFT &kp BSPC
            >;
        };

        SYM_layer {
            bindings = <
                            &kp N7 &kp N8 &kp N9  &kp STAR       &kp TILDE &kp LBRC  &kp RBRC &kp HASH
            &none &kp DOT   &kp N1 &kp N2 &kp N3  &kp EQUAL      &kp LT    &kp LPAR  &kp RPAR &kp GT   &kp AMPS  &none
                  &kp CARET &kp N4 &kp N5 &kp N6  &kp PLUS       &kp DLLR  &kp LBKT  &kp RBKT &kp AT   &kp PRCNT
                                          &trans  &kp N0         &trans    &trans
            >;
        };

        NAV_layer {
            bindings = <
                                &kp PG_UP &kp UP   &kp C_VOL_UP &kp END         &kp LG(P) &kp LG(D)     &kp LS(LG(D)) &kp LG(Q)
            &kp HOME &kp C_PREV &kp LEFT  &kp DOWN &kp RIGHT    &kp C_NEXT      &kp LG(L) &kp RGUI      &kp RCTRL     &kp RALT  &none &none
                     &kp C_STOP &kp PG_DN &kp C_PP &kp C_VOL_DN &kp C_MUTE      &none     &kp LG(ENTER) &kp LG(O)     &kp LG(N) &none
                                                   &none        &none           &trans    &kp DEL
            >;
        };

        FN_layer {
            bindings = <
                        &kp F7 &kp F8 &kp F9 &kp F10      &none  &kp C_BRI_DN &kp C_BRI_UP &none
            &none &none &kp F1 &kp F2 &kp F3 &kp F11      &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                  &none &kp F4 &kp F5 &kp F6 &kp F12      &none  &bt BT_CLR   &none        &none        &none
                                      &trans &trans       &trans &trans
            >;
        };
    };
};
