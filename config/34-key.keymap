#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define U_PST &kp LC(V)
#define U_CPY &kp LC(C)
#define U_CUT &kp LC(X)
#define U_UND &kp LC(Z)
#define U_RDO &kp LC(LS(Z))
#define U_MIC &kp LG(LA(K))

#define L0 0
#define L1 1
#define L2 2
#define L2 3



/*


                                       L0

            ╭─────┬─────┬─────┬─────╮      ╭─────┬─────┬─────┬─────╮
            │  W  │  E  │  R  │  T  │      │  Y  │  U  │  I  │  O  │ 
╭─────┬─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┬─────╮
│  Q  │  A  │  S  │  D  │  F  │  G  │      │  H  │  J  │  K  │  L  │  P  │ shft│
╰─────┼─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┼─────╯
      │  Z  │  X  │  C  │  V  │  B  │      │  N  │  M  | gui | alt │ ctrl│
      ╰─────┴─────┴─────┼─────┼─────┤      ├─────┼─────┼─────┴─────┴─────╯
                        │  L1 │ spc │      │ ret │  L2 │
                        ╰─────┴─────╯      ╰─────┴─────╯

                                       L1

            ╭─────┬─────┬─────┬─────╮      ╭─────┬─────┬─────┬─────╮
            │ cut │ cpy │ pst │ esc │      │ pgup│ del │  ↑  │ bspc│ 
╭─────┬─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┬─────╮
│ shft│ / \ │ [ ] │ { } │ ( ) │ < > │      │ home│  ←  │  ↓  │  →  │ end │ shft│
╰─────┼─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┼─────╯
      │ ctrl│ alt │ gui │ und │ rdo │      │ pgdn│ tab | gui | alt │ ctrl│
      ╰─────┴─────┴─────┼─────┼─────┤      ├─────┼─────┼─────┴─────┴─────╯
                        │ L3  │ spc │      │ ret │  L3 │
                        ╰─────┴─────╯      ╰─────┴─────╯

                                       L2

            ╭─────┬─────┬─────┬─────╮      ╭─────┬─────┬─────┬─────╮
            │  7  │  8  │  9  │ - $ │      │ ~ ` │  !  │  &  │  |  │ 
╭─────┬─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┬─────╮
│  =  │ * / │  4  │  5  │  6  │ + % │      │ @ # │  "  │  ,  │  _  │  ;  │ shft│
╰─────┼─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┼─────╯
      │  0  │  1  │  2  │  3  │  .  │      │  ^  │  '  | gui | alt │ ctrl│
      ╰─────┴─────┴─────┼─────┼─────┤      ├─────┼─────┼─────┴─────┴─────╯
                        │ L3  │ spc │      │ ret │  L3 │
                        ╰─────┴─────╯      ╰─────┴─────╯

                                       L3

            ╭─────┬─────┬─────┬─────╮      ╭─────┬─────┬─────┬─────╮
            │ F7  │ F8  │ F9  │     │      │ vol+│ btc │ bt1 │ bt2 │ 
╭─────┬─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┬─────╮
│ F12 │ F11 │ F4  │ F5  │ F6  │     │      │ vol-│ ptsk│ ntsk│ stsk│     │ shft│
╰─────┼─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┼─────╯
      │ F10 │ F1  │ F2  │ F3  │     │      │ mute│     | gui | alt │ ctrl│
      ╰─────┴─────┴─────┼─────┼─────┤      ├─────┼─────┼─────┴─────┴─────╯
                        │     │ spc │      │ ret │     │
                        ╰─────┴─────╯      ╰─────┴─────╯
*/
/ {
        keymap {
                compatible = "zmk,keymap";
                L0 {
                            label = "L0";
                            bindings = <
/*                                         ╭───────────────────┬───────────────────┬───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮        ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╭───────────────────┬───────────────────┬───────────────────╮                                         */
                                                  &kp W                &kp E                &kp R              &kp T                      &kp Y               &kp U                &kp I               &kp O
/* ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮        ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮ */
          &kp Q                &kp A              &kp S                &kp D                &kp F              &kp G                      &kp H               &kp J                &kp K               &kp L               &kp P               &kp RSHFT
/* ╰╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╯ */
                               &kp Z              &kp X                &kp C                &kp V              &kp B                      &kp N               &kp M                &kp RGUI            &kp RALT            &kp RCTRL
/*                     ╰───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────╯                     */
                                                                                            &sl L1             &kp SPACE                  &kp ENTER            &sl L2       
/*                                                                                 ╰───────────────────┴───────────────────╯        ╰───────────────────┴───────────────────╯                                                             */
                             >;
                     };
                     L1 {
                             label = "L1";
                             bindings = <
/*                                         ╭───────────────────┬───────────────────┬───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮        ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┬───────────────────┬───────────────────┬───────────────────╮                                         */
                                                  U_CUT                 U_CPY              U_PST             &kp ESC                       &kp PG_UP           &kp DEL             &kp UP               &kp BSPC
/* ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮        ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮ */
          &kp LSHFT            &slashes          &squares              &squiggles         &parens            &angles                       &kp HOME            &kp LEFT            &kp DOWN             &kp RIGHT         &kp END             &trans
/* ╰╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╯ */
                               &kp LCTRL         &kp LALT              &kp RGUI            U_UND               U_RDO                       &kp PG_DN           &kp TAB              &trans               &trans           &trans
/*                     ╰───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────╯                     */
                                                                                           &none               &trans                       &trans              &sl L3           
/*                                                                                 ╰───────────────────┴───────────────────╯        ╰───────────────────┴───────────────────╯                                                             */
                             >;
                     };

                     L2 {
                             label = "L2";
                             bindings = <
/*                                         ╭───────────────────┬───────────────────┬───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮        ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╭───────────────────┬───────────────────┬───────────────────╮                                         */
                                                  &kp N7              &kp N8               &kp N9           &minus_dollar                &tilde_grave        &kp EXCL             &kp AMPS             &kp PIPE
/* ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮        ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮ */
          &kp EQUAL           &start_slash        &kp N4              &kp N5               &kp N6           &plus_percent                  &at_hash          &kp DQT             &kp COMMA            &kp UNDER          &kp SEMI             &trans
/* ╰╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╯ */
                              &kp  N0             &kp N1              &kp N2               &kp N3              &kp DOT                    &kp CARET          &kp SQT            &trans                &trans             &trans
/*                     ╰───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────╯                     */
                                                                                           &sl L3              &trans                       &trans            &none              
/*                                                                                 ╰───────────────────┴───────────────────╯        ╰───────────────────┴───────────────────╯                                                             */
                             >;
                     };                     
                     
                     L3 {
                             label = "L3";
                             bindings = <
/*                                         ╭───────────────────┬───────────────────┬───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮        ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╭───────────────────┬───────────────────┬───────────────────╮                                         */
                                                  &kp F7              &kp F8               &kp F9              &none                     &kp C_VOL_UP        &bt BT_CLR           &bt BT_SEL 0       &bt BT_SEL 1
/* ╭╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮        ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╮ */
          &kp F12             &kp F11             &kp F4              &kp F5               &kp F6              &none                   &kp C_VOL_DOWN    &kp C_AL_PREV_TASK  &kp C_AL_NEXT_TASK &kp C_AL_SELECT_TASK      &none             &trans
/* ╰╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╯ */
                              &kp F10             &kp F1              &kp F2               &kp F3              &none                      &kp C_MUTE         &kp K_BACK          &kp K_FORWARD       &kp K_REFRESH         &trans
/*                     ╰───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┤        ├───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────╯                     */
                                                                                           &none               &trans                       &trans            &none              
/*                                                                                 ╰───────────────────┴───────────────────╯        ╰───────────────────┴───────────────────╯                                                             */
                             >;
                     };
      };
      behaviors {
        slashes: slashes {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_SLASH>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        squares: squares {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        squiggles: squiggles {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        parens: parens {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        angles: angles {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_SLASH>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        start_slash: start_slash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp KP_SLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        minus_dollar: minus_dollar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp DOLLAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        plus_percent: plus_percent {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp PERCENT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at_hash: at_hash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp HASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        tilde_grave: tilde_grave {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp TILDE>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};
